{"ast":null,"code":"/* eslint-disable no-useless-concat */\nimport * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const fetchStaff = () => dispatch => {\n  dispatch(staffLoading(true));\n  return fetch(baseUrl + \"staffs\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error\" + response.status + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(addStaff(response))).catch(error => dispatch(staffFailed(error.message)));\n};\nexport const addStaff = staff => ({\n  type: ActionTypes.ADD_STAFF,\n  payload: {\n    staff\n  }\n});\nexport const postStaff = staff => dispatch => {\n  return fetch(baseUrl + \"staffs\", {\n    method: \"POST\",\n    body: JSON.stringify(staff),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\" //gửi thông tin đăng nhập nếu URL yêu cầu có cùng nguồn gốc với tập lệnh gọi\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \" :\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(addStaff(response))).catch(error => {\n    console.log(\"ERROR MESSAGE \" + error.message);\n    alert(\"Your POST newstaff could not be posted\\nError: \" + error.message);\n  });\n};\nexport const staffLoading = () => ({\n  type: ActionTypes.STAFF_LOADING\n});\nexport const staffFailed = errmess => ({\n  type: ActionTypes.STAFF_FAILED,\n  payload: errmess\n}); // update Staff\n\nexport const updateStaff = staff => dispatch => {\n  return fetch(baseUrl + \"staffs\", {\n    method: \"PATCH\",\n    body: JSON.stringify(staff),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\" //gửi thông tin đăng nhập nếu URL yêu cầu có cùng nguồn gốc với tập lệnh gọi\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \" :\" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(addStaff(response))).catch(error => {\n    console.log(\"ERROR MESSAGE \" + error.message);\n    alert(\"Your Update could not be updated\\nError: \" + error.message);\n  });\n}; // delete Staff\n\nexport const deleteStaff = staffId => dispatch => {\n  fetch(baseUrl + \"staffs/\" + staffId, {\n    method: \"DELETE\",\n    header: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(list => {\n    dispatch(addStaff(list));\n  });\n};\nexport const fetchDepartment = () => dispatch => {\n  dispatch(departmentLoading(true));\n  return fetch(baseUrl + \"departments\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error :\" + response.status + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(response => dispatch(addDepartment(response))).catch(error => dispatch(departmentFailed(error.message)));\n};\nexport const addDepartment = department => ({\n  type: ActionTypes.ADD_DEPARTMENT,\n  payload: department\n});\nexport const departmentLoading = () => ({\n  type: ActionTypes.DEPARTMENT_LOADING\n});\nexport const departmentFailed = department => ({\n  type: ActionTypes.DEPARTMENT_FAILED,\n  payload: department\n});\nexport const fetchStaffSalary = () => dispatch => {\n  return fetch(baseUrl + \"staffsSalary\").then(response => {\n    if (response.ok) return response;else {\n      var error = new Error(\"ERROR :\" + response.status + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(response => dispatch(addSalary(response))).catch(error => dispatch(salaryFailed(error)));\n};\nexport const addSalary = salary => ({\n  type: ActionTypes.ADD_STAFFSALARY,\n  payload: salary\n});\nexport const salaryLoading = () => ({\n  type: ActionTypes.STAFFSALARY_LOADING\n});\nexport const salaryFailed = salary => ({\n  type: ActionTypes.STAFFSALARY_FAILED,\n  payload: salary\n});\nexport const fetchStaffInDept = id => dispatch => {\n  return fetch(baseUrl + \"departments\" + `/${id}`).then(response => {\n    if (response.ok) return response;else {\n      var error = new Error(\"ERROR :\" + response.status + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(response => dispatch(addStaffIndept(response))).catch(response => dispatch(staffInDeptFailed(response)));\n};\nexport const addStaffIndept = val => ({\n  type: ActionTypes.ADD_STAFFINDEPT,\n  payload: val\n});\nexport const staffInDeptFailed = val => ({\n  type: ActionTypes.STAFFINDEPT_FAILED,\n  payload: val\n});\nexport const staffInDeptLoad = () => ({\n  type: ActionTypes.STAFFINDEPT_LOADING\n});","map":{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/FunixReactJS/src/redux/ActionCreactors.js"],"names":["ActionTypes","baseUrl","fetchStaff","dispatch","staffLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","addStaff","catch","staffFailed","staff","type","ADD_STAFF","payload","postStaff","method","body","JSON","stringify","headers","credentials","console","log","alert","STAFF_LOADING","STAFF_FAILED","updateStaff","deleteStaff","staffId","header","res","list","fetchDepartment","departmentLoading","addDepartment","departmentFailed","department","ADD_DEPARTMENT","DEPARTMENT_LOADING","DEPARTMENT_FAILED","fetchStaffSalary","errMess","addSalary","salaryFailed","salary","ADD_STAFFSALARY","salaryLoading","STAFFSALARY_LOADING","STAFFSALARY_FAILED","fetchStaffInDept","id","addStaffIndept","staffInDeptFailed","val","ADD_STAFFINDEPT","STAFFINDEPT_FAILED","staffInDeptLoad","STAFFINDEPT_LOADING"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-concat */\r\nimport * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const fetchStaff = () => (dispatch) => {\r\n  dispatch(staffLoading(true));\r\n\r\n  return fetch(baseUrl + \"staffs\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error\" + response.status + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addStaff(response)))\r\n    .catch((error) => dispatch(staffFailed(error.message)));\r\n};\r\n\r\nexport const addStaff = (staff) => ({\r\n  type: ActionTypes.ADD_STAFF,\r\n  payload: {\r\n    staff,\r\n  },\r\n});\r\n\r\nexport const postStaff = (staff) => (dispatch) => {\r\n  return fetch(baseUrl + \"staffs\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(staff),\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    credentials: \"same-origin\", //gửi thông tin đăng nhập nếu URL yêu cầu có cùng nguồn gốc với tập lệnh gọi\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \" :\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addStaff(response)))\r\n    .catch((error) => {\r\n      console.log(\"ERROR MESSAGE \" + error.message);\r\n      alert(\"Your POST newstaff could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const staffLoading = () => ({\r\n  type: ActionTypes.STAFF_LOADING,\r\n});\r\n\r\nexport const staffFailed = (errmess) => ({\r\n  type: ActionTypes.STAFF_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\n// update Staff\r\nexport const updateStaff = (staff) => (dispatch) => {\r\n  return fetch(baseUrl + \"staffs\", {\r\n    method: \"PATCH\",\r\n    body: JSON.stringify(staff),\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    credentials: \"same-origin\", //gửi thông tin đăng nhập nếu URL yêu cầu có cùng nguồn gốc với tập lệnh gọi\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \" :\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addStaff(response)))\r\n    .catch((error) => {\r\n      console.log(\"ERROR MESSAGE \" + error.message);\r\n      alert(\"Your Update could not be updated\\nError: \" + error.message);\r\n    });\r\n};\r\n// delete Staff\r\nexport const deleteStaff = (staffId) => (dispatch) => {\r\n  fetch(baseUrl + \"staffs/\" + staffId, {\r\n    method: \"DELETE\",\r\n    header: { \"Content-Type\": \"application/json\" },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((list) => {\r\n      dispatch(addStaff(list));\r\n    });\r\n};\r\n\r\nexport const fetchDepartment = () => (dispatch) => {\r\n  dispatch(departmentLoading(true));\r\n\r\n  return fetch(baseUrl + \"departments\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error :\" + response.status + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addDepartment(response)))\r\n    .catch((error) => dispatch(departmentFailed(error.message)));\r\n};\r\nexport const addDepartment = (department) => ({\r\n  type: ActionTypes.ADD_DEPARTMENT,\r\n  payload: department,\r\n});\r\n\r\nexport const departmentLoading = () => ({\r\n  type: ActionTypes.DEPARTMENT_LOADING,\r\n});\r\n\r\nexport const departmentFailed = (department) => ({\r\n  type: ActionTypes.DEPARTMENT_FAILED,\r\n  payload: department,\r\n});\r\n\r\nexport const fetchStaffSalary = () => (dispatch) => {\r\n  return fetch(baseUrl + \"staffsSalary\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) return response;\r\n        else {\r\n          var error = new Error(\r\n            \"ERROR :\" + response.status + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errMess = new Error(error.message);\r\n        throw errMess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addSalary(response)))\r\n    .catch((error) => dispatch(salaryFailed(error)));\r\n};\r\n\r\nexport const addSalary = (salary) => ({\r\n  type: ActionTypes.ADD_STAFFSALARY,\r\n  payload: salary,\r\n});\r\nexport const salaryLoading = () => ({\r\n  type: ActionTypes.STAFFSALARY_LOADING,\r\n});\r\nexport const salaryFailed = (salary) => ({\r\n  type: ActionTypes.STAFFSALARY_FAILED,\r\n  payload: salary,\r\n});\r\n\r\nexport const fetchStaffInDept = (id) => (dispatch) => {\r\n  return fetch(baseUrl + \"departments\" + `/${id}`)\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) return response;\r\n        else {\r\n          var error = new Error(\r\n            \"ERROR :\" + response.status + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errMess = new Error(error.message);\r\n        throw errMess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addStaffIndept(response)))\r\n    .catch((response) => dispatch(staffInDeptFailed(response)));\r\n};\r\nexport const addStaffIndept = (val) => ({\r\n  type: ActionTypes.ADD_STAFFINDEPT,\r\n  payload: val,\r\n});\r\nexport const staffInDeptFailed = (val) => ({\r\n  type: ActionTypes.STAFFINDEPT_FAILED,\r\n  payload: val,\r\n});\r\nexport const staffInDeptLoad = () => ({\r\n  type: ActionTypes.STAFFINDEPT_LOADING,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}