{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\GitHub\\\\FunixReactJS\\\\src\\\\components\\\\SalaryTableComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Card, CardText, Jumbotron, BreadcrumbItem, Breadcrumb } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Loading } from \"./LoadingComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderSalary = _ref => {\n  let {\n    staff,\n    salary,\n    isLoading,\n    errMess\n  } = _ref;\n\n  const formatDecimal = require(\"format-decimal\");\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  } else if (errMess) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: errMess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(Jumbotron, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"py-3\",\n      children: staff.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"M\\xE3 nh\\xE2n vi\\xEAn: \", staff.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"H\\u1EC7 s\\u1ED1 l\\u01B0\\u01A1ng: \", staff.salaryScale]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"S\\u1ED1 gi\\u1EDD l\\xE0m th\\xEAm: \", staff.overTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-1\",\n      children: /*#__PURE__*/_jsxDEV(CardText, {\n        children: [\"L\\u01B0\\u01A1ng:\", \" \", formatDecimal(salary, {\n          decimal: \".\",\n          thousands: \",\",\n          precision: 0\n        }), \" \", \"VND\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n\n_c = RenderSalary;\n\nfunction SalaryTable(props) {\n  _s();\n\n  const [staffList, setStaffList] = useState(props.staffList);\n\n  function salaryCalc(salaryScale, overTime) {\n    const basicSalary = 3000000;\n    const overTimeSalary = 200000;\n    return salaryScale * basicSalary + overTime * overTimeSalary;\n  }\n\n  function sortSalary(sorttype) {\n    let sortedStaffList = [...staffList];\n    let salaryA = 0;\n    let salaryB = 0;\n\n    if (sorttype === \"increase\") {\n      sortedStaffList.sort(function (a, b) {\n        salaryA = salaryCalc(a.salaryScale, a.overTime);\n        salaryB = salaryCalc(b.salaryScale, b.overTime);\n        return salaryA - salaryB;\n      });\n    }\n\n    if (sorttype === \"decrease\") {\n      sortedStaffList.sort(function (a, b) {\n        salaryA = salaryCalc(a.salaryScale, a.overTime);\n        salaryB = salaryCalc(b.salaryScale, b.overTime);\n        return salaryB - salaryA;\n      });\n    }\n\n    setStaffList(sortedStaffList);\n  }\n\n  const staff = staffList.staff.map(staff => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-md-6 col-lg-4\",\n      children: /*#__PURE__*/_jsxDEV(RenderSalary, {\n        staff: staff,\n        salary: salaryCalc(staff.salaryScale, staff.overTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, staff.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/staff\",\n          children: \"Nh\\xE2n Vi\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n        active: true,\n        children: \"B\\u1EA3ng L\\u01B0\\u01A1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sort\",\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"S\\u1EAFp X\\u1EBFp Theo L\\u01B0\\u01A1ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => sortSalary(\"increase\"),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-sort-amount-asc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), \" L\\u01B0\\u01A1ng Th\\u1EA5p\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => sortSalary(\"decrease\"),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-sort-amount-desc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \" L\\u01B0\\u01A1ng Cao\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: staff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryTable, \"pDBCgopgeXn5sXsUuOWK/IMWET0=\");\n\n_c2 = SalaryTable;\nexport default SalaryTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderSalary\");\n$RefreshReg$(_c2, \"SalaryTable\");","map":{"version":3,"sources":["C:/Users/ASUS/Documents/GitHub/FunixReactJS/src/components/SalaryTableComponent.js"],"names":["React","useState","Button","Card","CardText","Jumbotron","BreadcrumbItem","Breadcrumb","Link","Loading","RenderSalary","staff","salary","isLoading","errMess","formatDecimal","require","name","id","salaryScale","overTime","decimal","thousands","precision","SalaryTable","props","staffList","setStaffList","salaryCalc","basicSalary","overTimeSalary","sortSalary","sorttype","sortedStaffList","salaryA","salaryB","sort","a","b","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardText,\r\n  Jumbotron,\r\n  BreadcrumbItem,\r\n  Breadcrumb,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\nconst RenderSalary = ({ staff, salary, isLoading, errMess }) => {\r\n  const formatDecimal = require(\"format-decimal\");\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else\r\n    return (\r\n      <Jumbotron>\r\n        <h2 className=\"py-3\">{staff.name}</h2>\r\n        <p>Mã nhân viên: {staff.id}</p>\r\n        <p>Hệ số lương: {staff.salaryScale}</p>\r\n        <p>Số giờ làm thêm: {staff.overTime}</p>\r\n        <Card className=\"p-1\">\r\n          <CardText>\r\n            Lương:{\" \"}\r\n            {formatDecimal(salary, {\r\n              decimal: \".\",\r\n              thousands: \",\",\r\n              precision: 0,\r\n            })}{\" \"}\r\n            VND\r\n          </CardText>\r\n        </Card>\r\n      </Jumbotron>\r\n    );\r\n};\r\n\r\nfunction SalaryTable(props) {\r\n  const [staffList, setStaffList] = useState(props.staffList);\r\n  function salaryCalc(salaryScale, overTime) {\r\n    const basicSalary = 3000000;\r\n    const overTimeSalary = 200000;\r\n    return salaryScale * basicSalary + overTime * overTimeSalary;\r\n  }\r\n\r\n  function sortSalary(sorttype) {\r\n    let sortedStaffList = [...staffList];\r\n    let salaryA = 0;\r\n    let salaryB = 0;\r\n\r\n    if (sorttype === \"increase\") {\r\n      sortedStaffList.sort(function (a, b) {\r\n        salaryA = salaryCalc(a.salaryScale, a.overTime);\r\n        salaryB = salaryCalc(b.salaryScale, b.overTime);\r\n        return salaryA - salaryB;\r\n      });\r\n    }\r\n\r\n    if (sorttype === \"decrease\") {\r\n      sortedStaffList.sort(function (a, b) {\r\n        salaryA = salaryCalc(a.salaryScale, a.overTime);\r\n        salaryB = salaryCalc(b.salaryScale, b.overTime);\r\n        return salaryB - salaryA;\r\n      });\r\n    }\r\n\r\n    setStaffList(sortedStaffList);\r\n  }\r\n\r\n  const staff = staffList.staff.map((staff) => {\r\n    return (\r\n      <div className=\"col-12 col-md-6 col-lg-4\" key={staff.id}>\r\n        <RenderSalary\r\n          staff={staff}\r\n          salary={salaryCalc(staff.salaryScale, staff.overTime)}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Breadcrumb>\r\n        <BreadcrumbItem>\r\n          <Link to=\"/staff\">Nhân Viên</Link>\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem active>Bảng Lương</BreadcrumbItem>\r\n      </Breadcrumb>\r\n      <div id=\"sort\" className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h5>Sắp Xếp Theo Lương</h5>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Button onClick={() => sortSalary(\"increase\")}>\r\n            <span className=\"fa fa-sort-amount-asc\"></span> Lương Thấp\r\n          </Button>\r\n\r\n          <Button onClick={() => sortSalary(\"decrease\")}>\r\n            <span className=\"fa fa-sort-amount-desc\"></span> Lương Cao\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">{staff}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalaryTable;\r\n"]},"metadata":{},"sourceType":"module"}