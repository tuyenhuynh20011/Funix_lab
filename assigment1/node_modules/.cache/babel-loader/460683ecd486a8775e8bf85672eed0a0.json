{"ast":null,"code":"import { SET } from \"./action\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { useDispatch } from \"react-redux\"; // export const FetchApi = async () => {\n//   const dispatch=useDispatch()\n//    await fetch(\"https://rjs101xbackend.herokuapp.com/\", {\n//       method: \"GET\",\n//     })\n//       .then(function (response) {\n//         return response.text();  \n//       })\n//       .then(function (data) {\n//         dispatch(SET(JSON.parse(data)));\n//       });\n//   };\n\nexport const FetchApi = () => dispatch => {\n  return fetch(baseUrl + 'dishes').then(response => {\n    return response;\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n};","map":{"version":3,"names":["SET","baseUrl","useDispatch","FetchApi","dispatch","fetch","then","response","error","errmess","Error","message","json","dishes","addDishes","catch","dishesFailed"],"sources":["C:/Users/ASUS/Documents/GitHub/Funix_lab/assigment1/src/redux/actionCreate.js"],"sourcesContent":["import { SET } from \"./action\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { useDispatch } from \"react-redux\";\r\n// export const FetchApi = async () => {\r\n//   const dispatch=useDispatch()\r\n//    await fetch(\"https://rjs101xbackend.herokuapp.com/\", {\r\n//       method: \"GET\",\r\n//     })\r\n//       .then(function (response) {\r\n//         return response.text();  \r\n//       })\r\n//       .then(function (data) {\r\n//         dispatch(SET(JSON.parse(data)));\r\n//       });\r\n//   };\r\n  export const FetchApi = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n                return response;\r\n      \r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAD,IAAc;EAE1C,OAAOC,KAAK,CAACJ,OAAO,GAAG,QAAX,CAAL,CACFK,IADE,CACGC,QAAQ,IAAI;IACV,OAAOA,QAAP;EAEP,CAJE,EAKHC,KAAK,IAAI;IACL,IAAIC,OAAO,GAAG,IAAIC,KAAJ,CAAUF,KAAK,CAACG,OAAhB,CAAd;IACA,MAAMF,OAAN;EACH,CARE,EASFH,IATE,CASGC,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EATf,EAUFN,IAVE,CAUGO,MAAM,IAAIT,QAAQ,CAACU,SAAS,CAACD,MAAD,CAAV,CAVrB,EAWFE,KAXE,CAWIP,KAAK,IAAIJ,QAAQ,CAACY,YAAY,CAACR,KAAK,CAACG,OAAP,CAAb,CAXrB,CAAP;AAYH,CAdQ"},"metadata":{},"sourceType":"module"}