{"ast":null,"code":"import { STAFFS, DEPARTMENTS } from \"../shared/Staff\";\nimport { useEffect } from \"react\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const initialState = {\n  staffs: [],\n  department: []\n};\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await client.get('/fakeApi/users');\n  return response.data;\n});\nfetch(baseUrl, {\n  method: \"GET\"\n}).then(function (response) {\n  if (response) return response.text();else {\n    console.log('api not found');\n  }\n}).then(function (data) {\n  console.log(JSON.parse(data));\n});\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD\":\n      return { ...state,\n        staffs: [...state.staffs, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["STAFFS","DEPARTMENTS","useEffect","baseUrl","initialState","staffs","department","fetchUsers","createAsyncThunk","response","client","get","data","fetch","method","then","text","console","log","JSON","parse","rootReducer","state","action","type","payload"],"sources":["C:/Users/ASUS/Documents/GitHub/Funix_lab/assigment1/src/redux/reducer.js"],"sourcesContent":["import { STAFFS, DEPARTMENTS } from \"../shared/Staff\";\r\nimport { useEffect } from \"react\";\r\nimport { baseUrl } from \"../shared/baseUrl\"\r\nexport const initialState = {\r\n  staffs: [],\r\n  department:[],\r\n};\r\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\r\n  const response = await client.get('/fakeApi/users')\r\n  return response.data\r\n})\r\nfetch(baseUrl, { \r\n  method: \"GET\",\r\n}).then(function(response) {\r\n  if(response)\r\n  return response.text();\r\n  else{\r\n      console.log('api not found');\r\n  }\r\n}).then(function(data) {\r\n      console.log((JSON.parse(data)));\r\n})\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return {\r\n        ...state,\r\n        staffs: [\r\n          ...state.staffs,\r\n          action.payload\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE,EADkB;EAE1BC,UAAU,EAAC;AAFe,CAArB;AAIP,OAAO,MAAMC,UAAU,GAAGC,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;EACzE,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,GAAP,CAAW,gBAAX,CAAvB;EACA,OAAOF,QAAQ,CAACG,IAAhB;AACD,CAHyC,CAAnC;AAIPC,KAAK,CAACV,OAAD,EAAU;EACbW,MAAM,EAAE;AADK,CAAV,CAAL,CAEGC,IAFH,CAEQ,UAASN,QAAT,EAAmB;EACzB,IAAGA,QAAH,EACA,OAAOA,QAAQ,CAACO,IAAT,EAAP,CADA,KAEI;IACAC,OAAO,CAACC,GAAR,CAAY,eAAZ;EACH;AACF,CARD,EAQGH,IARH,CAQQ,UAASH,IAAT,EAAe;EACjBK,OAAO,CAACC,GAAR,CAAaC,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAb;AACL,CAVD;;AAWA,MAAMS,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBlB,YAAyB;EAAA,IAAXmB,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,KAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELjB,MAAM,EAAE,CACN,GAAGiB,KAAK,CAACjB,MADH,EAENkB,MAAM,CAACE,OAFD;MAFH,CAAP;;IAQF;MACE,OAAOH,KAAP;EAXJ;AAaD,CAdD;;AAeA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}