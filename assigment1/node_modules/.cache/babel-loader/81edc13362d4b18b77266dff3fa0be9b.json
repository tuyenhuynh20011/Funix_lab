{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { SET } from \"./action\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { useDispatch } from \"react-redux\";\nexport const FetchApi = async () => {\n  _s();\n\n  const dispatch = useDispatch();\n  await fetch(\"https://rjs101xbackend.herokuapp.com/\", {\n    method: \"GET\"\n  }).then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    dispatch(SET(JSON.parse(data)));\n  });\n};\n\n_s(FetchApi, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FetchApi;\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchApi\");","map":{"version":3,"names":["SET","baseUrl","useDispatch","FetchApi","dispatch","fetch","method","then","response","text","data","JSON","parse","fetchDishes","dishesLoading","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","dishesFailed"],"sources":["C:/Users/ASUS/Documents/GitHub/Funix_lab/assigment1/src/redux/actionCreate.js"],"sourcesContent":["import { SET } from \"./action\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { useDispatch } from \"react-redux\";\r\nexport const FetchApi = async () => {\r\n  const dispatch=useDispatch()\r\n   await fetch(\"https://rjs101xbackend.herokuapp.com/\", {\r\n      method: \"GET\",\r\n    })\r\n      .then(function (response) {\r\n        return response.text();  \r\n      })\r\n      .then(function (data) {\r\n        dispatch(SET(JSON.parse(data)));\r\n      });\r\n  };\r\n  export const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,UAApB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,MAAMC,QAAQ,GAAG,YAAY;EAAA;;EAClC,MAAMC,QAAQ,GAACF,WAAW,EAA1B;EACC,MAAMG,KAAK,CAAC,uCAAD,EAA0C;IAClDC,MAAM,EAAE;EAD0C,CAA1C,CAAL,CAGFC,IAHE,CAGG,UAAUC,QAAV,EAAoB;IACxB,OAAOA,QAAQ,CAACC,IAAT,EAAP;EACD,CALE,EAMFF,IANE,CAMG,UAAUG,IAAV,EAAgB;IACpBN,QAAQ,CAACJ,GAAG,CAACW,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAJ,CAAR;EACD,CARE,CAAN;AASA,CAXI;;GAAMP,Q;UACID,W;;;KADJC,Q;AAYX,OAAO,MAAMU,WAAW,GAAG,MAAOT,QAAD,IAAc;EAC7CA,QAAQ,CAACU,aAAa,CAAC,IAAD,CAAd,CAAR;EAEA,OAAOT,KAAK,CAACJ,OAAO,GAAG,QAAX,CAAL,CACFM,IADE,CACGC,QAAQ,IAAI;IACd,IAAIA,QAAQ,CAACO,EAAb,EAAiB;MACb,OAAOP,QAAP;IACH,CAFD,MAGK;MACD,IAAIQ,KAAK,GAAG,IAAIC,KAAJ,CAAU,WAAWT,QAAQ,CAACU,MAApB,GAA6B,IAA7B,GAAoCV,QAAQ,CAACW,UAAvD,CAAZ;MACAH,KAAK,CAACR,QAAN,GAAiBA,QAAjB;MACA,MAAMQ,KAAN;IACH;EACJ,CAVE,EAWHA,KAAK,IAAI;IACL,IAAII,OAAO,GAAG,IAAIH,KAAJ,CAAUD,KAAK,CAACK,OAAhB,CAAd;IACA,MAAMD,OAAN;EACH,CAdE,EAeFb,IAfE,CAeGC,QAAQ,IAAIA,QAAQ,CAACc,IAAT,EAff,EAgBFf,IAhBE,CAgBGgB,MAAM,IAAInB,QAAQ,CAACoB,SAAS,CAACD,MAAD,CAAV,CAhBrB,EAiBFE,KAjBE,CAiBIT,KAAK,IAAIZ,QAAQ,CAACsB,YAAY,CAACV,KAAK,CAACK,OAAP,CAAb,CAjBrB,CAAP;AAkBH,CArBQ"},"metadata":{},"sourceType":"module"}