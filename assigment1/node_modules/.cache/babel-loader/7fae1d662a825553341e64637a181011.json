{"ast":null,"code":"import { STAFFS, DEPARTMENTS } from \"../shared/Staff\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const initialState = {\n  staffs: [],\n  department: []\n}; // const initialState=[]\n\nlet headersList = {\n  \"Accept\": \"*/*\",\n  \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\"\n};\n\nconst fetchApi = async () => {\n  const datas = await fetch(baseUrl, {\n    method: \"GET\",\n    headers: headersList\n  }).then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    return JSON.parse(data);\n  });\n};\n\nfetchApi();\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD\":\n      return { ...state,\n        staffs: [...state.staffs, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["STAFFS","DEPARTMENTS","baseUrl","initialState","staffs","department","headersList","fetchApi","datas","fetch","method","headers","then","response","text","data","JSON","parse","rootReducer","state","action","type","payload"],"sources":["C:/Users/ASUS/Documents/GitHub/Funix_lab/assigment1/src/redux/reducer.js"],"sourcesContent":["import { STAFFS, DEPARTMENTS } from \"../shared/Staff\";\r\nimport { baseUrl } from \"../shared/baseUrl\"\r\nexport const initialState = {\r\n  staffs: [],\r\n  department:[],\r\n};\r\n// const initialState=[]\r\n\r\nlet   headersList = {\r\n  \"Accept\": \"*/*\",\r\n  \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\"\r\n }\r\n const fetchApi = async () => {\r\n   const datas= await fetch(baseUrl, { \r\n     method: \"GET\",\r\n     headers: headersList\r\n   }).then(function(response) {\r\n     return response.text();\r\n   }).then(function(data) {\r\n    return JSON.parse(data)\r\n    })\r\n    \r\n } \r\n fetchApi()\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return {\r\n        ...state,\r\n        staffs: [\r\n          ...state.staffs,\r\n          action.payload\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,iBAApC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE,EADkB;EAE1BC,UAAU,EAAC;AAFe,CAArB,C,CAIP;;AAEA,IAAMC,WAAW,GAAG;EAClB,UAAU,KADQ;EAElB,cAAc;AAFI,CAApB;;AAIC,MAAMC,QAAQ,GAAG,YAAY;EAC3B,MAAMC,KAAK,GAAE,MAAMC,KAAK,CAACP,OAAD,EAAU;IAChCQ,MAAM,EAAE,KADwB;IAEhCC,OAAO,EAAEL;EAFuB,CAAV,CAAL,CAGhBM,IAHgB,CAGX,UAASC,QAAT,EAAmB;IACzB,OAAOA,QAAQ,CAACC,IAAT,EAAP;EACD,CALkB,EAKhBF,IALgB,CAKX,UAASG,IAAT,EAAe;IACtB,OAAOC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;EACC,CAPiB,CAAnB;AASD,CAVD;;AAWAR,QAAQ;;AACT,MAAMW,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBhB,YAAyB;EAAA,IAAXiB,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,KAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELf,MAAM,EAAE,CACN,GAAGe,KAAK,CAACf,MADH,EAENgB,MAAM,CAACE,OAFD;MAFH,CAAP;;IAQF;MACE,OAAOH,KAAP;EAXJ;AAaD,CAdD;;AAeA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}